{"version":3,"file":"index.umd.min.js","sources":["../src/utils.ts","../src/editor/ContentEditable.tsx","../src/editor/EditorContext.tsx","../src/editor/HtmlEditor.tsx","../src/editor/Editor.tsx","../src/toolbar/buttons.tsx","../src/toolbar/icons/UnorderedListIcon.tsx","../src/toolbar/icons/OrderedListIcon.tsx","../src/toolbar/dropdowns.tsx","../src/toolbar/HtmlButton.tsx","../src/toolbar/Separator.tsx","../src/toolbar/Toolbar.tsx","../src/editor/DefaultEditor.tsx"],"sourcesContent":["export function getSelectedNode(): Node {\n  if ((document as any).selection) {\n    return (document as any).selection.createRange().parentElement();\n  }\n\n  const selection = window.getSelection();\n  if (selection.rangeCount > 0) {\n    return selection.getRangeAt(0).startContainer.parentNode;\n  }\n\n  return null;\n}\n\nexport function normalizeHtml(str: string): string {\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, ' ');\n}\n\nexport function replaceCaret(el: HTMLElement) {\n  // Place the caret at the end of the element\n  const target = document.createTextNode('');\n  el.appendChild(target);\n\n  // do not move caret if element was not focused\n  const isTargetFocused = document.activeElement === el;\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\n    const sel = window.getSelection();\n    if (sel !== null) {\n      const range = document.createRange();\n      range.setStart(target, target.nodeValue.length);\n      range.collapse(true);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n    if (el instanceof HTMLElement) el.focus();\n  }\n}\n","/* eslint-disable react/prop-types */\n\nimport * as React from 'react';\nimport { normalizeHtml, replaceCaret } from '../utils';\n\n/**\n * Based on https://github.com/lovasoa/react-contenteditable\n * A simple component for a html element with editable contents.\n */\nexport const ContentEditable = React.memo(\n  React.forwardRef(function ContentEditable(\n    { className, disabled, tagName, value, ...rest }: ContentEditableProps,\n    ref: React.ForwardedRef<HTMLElement>,\n  ) {\n    const elRef = React.useRef<HTMLElement>();\n    const htmlRef = React.useRef(value);\n    const restRef = React.useRef(rest);\n\n    React.useEffect(() => {\n      restRef.current = rest;\n      const el = elRef.current;\n      if (el && normalizeHtml(htmlRef.current) !== normalizeHtml(value)) {\n        htmlRef.current = value;\n        el.innerHTML = value;\n        replaceCaret(el);\n      }\n    });\n\n    return React.useMemo(() => {\n      function onSetRef($el: HTMLElement) {\n        elRef.current = $el;\n        if (typeof ref === 'function') {\n          ref($el);\n        } else if (typeof ref === 'object') {\n          // eslint-disable-next-line no-param-reassign\n          ref.current = $el;\n        }\n      }\n\n      function onChange(event: React.SyntheticEvent<any>) {\n        const el = elRef.current;\n        if (!el) {\n          return;\n        }\n\n        const elementHtml = el.innerHTML;\n        if (elementHtml !== htmlRef.current) {\n          restRef.current.onChange?.({\n            ...event,\n            target: {\n              value: elementHtml,\n              name: rest.name,\n            } as any,\n          });\n        }\n\n        htmlRef.current = elementHtml;\n      }\n\n      return React.createElement(tagName || 'div', {\n        ...rest,\n        className,\n        contentEditable: !disabled,\n        dangerouslySetInnerHTML: { __html: value },\n        onBlur: (e) => (restRef.current.onBlur || onChange)(e),\n        onInput: onChange,\n        onKeyDown: (e) => (restRef.current.onKeyDown || onChange)(e),\n        onKeyUp: (e) => (restRef.current.onKeyUp || onChange)(e),\n        ref: onSetRef,\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [className, disabled, tagName]);\n  }),\n);\n\nexport type ContentEditableEvent = React.SyntheticEvent<any, Event> & {\n  target: { name?: string; value: string };\n};\n\nexport interface ContentEditableProps\n  extends React.HTMLAttributes<HTMLElement> {\n  disabled?: boolean;\n  contentEditableRef?: (el: HTMLElement) => void;\n  name?: string;\n  onChange?: (event: ContentEditableEvent) => void;\n  tagName?: string;\n  value?: string;\n}\n","import * as React from 'react';\n\nexport const EditorContext = React.createContext<EditorState>(null);\n\nexport function EditorProvider({ children }: { children: React.ReactNode }) {\n  const [state, setState] = React.useState<EditorState>({\n    htmlMode: false,\n    update,\n  });\n\n  function update(attrs) {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        ...attrs,\n        date: Date.now(),\n      };\n    });\n  }\n\n  return (\n    <EditorContext.Provider value={state}>{children}</EditorContext.Provider>\n  );\n}\n\nexport function useEditorState(): EditorState {\n  const context = React.useContext(EditorContext);\n  if (!context) {\n    throw new Error('You should wrap your component by EditorProvider');\n  }\n\n  return context;\n}\n\nexport interface EditorState {\n  update(attrs: Partial<EditorState>): void;\n  $el?: HTMLElement;\n  $selection?: Node;\n  htmlMode: boolean;\n}\n","import * as React from 'react';\n\nexport function HtmlEditor({ ...rest }) {\n  return <textarea {...rest} />;\n}\n","import * as React from 'react';\nimport { getSelectedNode } from '../utils';\nimport { ContentEditable, ContentEditableProps } from './ContentEditable';\nimport { useEditorState } from './EditorContext';\nimport { HtmlEditor } from './HtmlEditor';\nimport '../styles.css';\n\nexport function Editor({ children, onSelect, ...rest }: EditorProps) {\n  const editorState = useEditorState();\n\n  React.useEffect(() => {\n    document.addEventListener('click', onClickOutside);\n    return () => document.removeEventListener('click', onClickOutside);\n  });\n\n  function onClickOutside(event: MouseEvent) {\n    if (event.target === editorState.$el) {\n      return;\n    }\n\n    if (editorState.$el?.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    editorState.update({ $selection: null });\n  }\n\n  function onTextSelect(event: React.SyntheticEvent<HTMLElement>) {\n    onSelect?.(event);\n    editorState.update({ $selection: getSelectedNode() });\n  }\n\n  function setContentEditableRef($el: HTMLElement) {\n    editorState.update({ $el });\n  }\n\n  if (editorState.htmlMode) {\n    return (\n      <div className=\"rsw-editor\">\n        {children}\n        <HtmlEditor {...rest} className=\"rsw-ce rsw-html\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"rsw-editor\">\n      {children}\n      <ContentEditable\n        {...rest}\n        ref={setContentEditableRef}\n        onSelect={onTextSelect}\n        className=\"rsw-ce\"\n      />\n    </div>\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface EditorProps extends ContentEditableProps {}\n","import * as React from 'react';\nimport type { HTMLAttributes, ReactNode } from 'react';\nimport { EditorState, useEditorState } from '../editor/EditorContext';\nimport OrderedListIcon from './icons/OrderedListIcon';\nimport UnorderedListIcon from './icons/UnorderedListIcon';\n\nexport const BtnBold = createButton('Bold', 'ùêÅ', 'bold');\n\nexport const BtnBulletList = createButton(\n  'Bullet list',\n  <UnorderedListIcon />,\n  'insertUnorderedList',\n);\n\nexport const BtnClearFormatting = createButton(\n  'Clear formatting',\n  'TÃ≤‚Çì',\n  'removeFormat',\n);\n\nexport const BtnItalic = createButton('Italic', 'ùë∞', 'italic');\n\nexport const BtnLink = createButton('Link', 'üîó', ({ $selection }) => {\n  if ($selection?.nodeName === 'A') {\n    document.execCommand('unlink');\n  } else {\n    // eslint-disable-next-line no-alert\n    document.execCommand('createLink', false, prompt('URL', ''));\n  }\n});\n\nexport const BtnNumberedList = createButton(\n  'Numbered list',\n  <OrderedListIcon />,\n  'insertOrderedList',\n);\n\nexport const BtnRedo = createButton('Redo', '‚Ü∑', 'redo');\n\nexport const BtnUnderline = createButton(\n  'Underline',\n  <span style={{ textDecoration: 'underline' }}>ùêî</span>,\n  'underline',\n);\n\nexport const BtnUndo = createButton('Undo', '‚Ü∂', 'undo');\n\nfunction createButton(\n  title: string,\n  content: ReactNode,\n  command: ((state: EditorState) => void) | string,\n) {\n  ButtonFactory.displayName = title.replace(/\\s/g, '');\n\n  return ButtonFactory;\n\n  function ButtonFactory(props: HTMLAttributes<HTMLButtonElement>) {\n    const editorState = useEditorState();\n    const { $selection } = editorState;\n\n    let active = false;\n    if (typeof command === 'string') {\n      active = !!$selection && document.queryCommandState(command);\n    }\n\n    function onAction(e: React.MouseEvent<HTMLButtonElement>) {\n      e.preventDefault();\n      if (typeof command === 'function') {\n        command(editorState);\n      } else {\n        document.execCommand(command);\n      }\n    }\n\n    if (editorState.htmlMode) {\n      return null;\n    }\n\n    return (\n      <button\n        type=\"button\"\n        title={title}\n        {...props}\n        className=\"rsw-btn\"\n        onMouseDown={onAction}\n        data-active={active}\n      >\n        {content}\n      </button>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport default function UnorderedListIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n      style={{ verticalAlign: 'text-top' }}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M7 5h14v2H7V5zm0 8v-2h14v2H7zM4 4.50001c.83 0 1.5.66992 1.5 1.5 0 .83007-.67 1.5-1.5 1.5s-1.5-.66993-1.5-1.5c0-.83008.67-1.5 1.5-1.5zM4 10.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5-1.5-.67-1.5-1.5.67-1.5 1.5-1.5zM7 19v-2h14v2H7zm-3-2.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5-1.5-.67-1.5-1.5.67-1.5 1.5-1.5z\"\n      />\n    </svg>\n  );\n}\n","import * as React from 'react';\n\nexport default function OrderedListIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n      style={{ verticalAlign: 'text-top' }}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M6.99938 12.998v-2H20.9994v2H6.99938zm0 6.0001v-2H20.9994v2H6.99938zm0-12.00001v-2H20.9994v2H6.99938zm-4 1v-3h-1v-1h2v4h-1zm-1 9.00001v-1h3v4h-3v-1h2v-.5h-1v-1h1v-.5h-2zM4.25 10c.41421 0 .75.3358.75.75 0 .2024-.08017.3861-.2105.521L3.11983 13H5v1H2v-.9218L4 11H2v-1h2.25z\"\n      />\n    </svg>\n  );\n}\n","import * as React from 'react';\nimport type { ChangeEvent, HTMLAttributes } from 'react';\nimport { EditorState, useEditorState } from '../editor/EditorContext';\n\nexport const BtnStyles = createDropdown('Styles', [\n  ['Normal', 'formatBlock', 'DIV'],\n  ['ùóõùó≤ùóÆùó±ùó≤ùóø ùü≠', 'formatBlock', 'H1'],\n  ['Header 2', 'formatBlock', 'H2'],\n  ['ùô≤ùöòùöçùöé', 'formatBlock', 'PRE'],\n]);\n\nfunction createDropdown(title: string, items: DropDownItem[]): typeof Dropdown {\n  DropdownFactory.displayName = title;\n\n  return DropdownFactory;\n\n  function DropdownFactory(props: DropdownProps) {\n    const editorState = useEditorState();\n\n    if (editorState.htmlMode) {\n      return null;\n    }\n\n    return (\n      <Dropdown {...props} onChange={onChange} title={title} items={items} />\n    );\n\n    function onChange(e: ChangeEvent<HTMLSelectElement>) {\n      const selected = parseInt(e.target.value, 10);\n      const [, command, commandArgument] = items[selected];\n\n      e.preventDefault();\n      e.target.selectedIndex = 0;\n\n      if (typeof command === 'function') {\n        command(editorState);\n      } else {\n        document.execCommand(command, false, commandArgument);\n      }\n    }\n  }\n}\n\nexport function Dropdown({ items, selected, ...inputProps }: DropdownProps) {\n  return (\n    <select {...inputProps} value={selected} className=\"rsw-dd\">\n      <option hidden>{inputProps.title}</option>\n      {items.map((item, index) => (\n        <option key={item[2]} value={index}>\n          {item[0]}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport type DropDownItem = [\n  string,\n  string | ((editorState: EditorState) => void),\n  string,\n];\n\nexport interface DropdownProps extends HTMLAttributes<HTMLSelectElement> {\n  selected?: number;\n  items?: DropDownItem[];\n}\n","import * as React from 'react';\nimport { useEditorState } from '../editor/EditorContext';\n\nexport function HtmlButton({ ...rest }) {\n  const editorState = useEditorState();\n\n  function onClick() {\n    editorState.update({\n      htmlMode: !editorState.htmlMode,\n    });\n  }\n\n  return (\n    <button\n      type=\"button\"\n      title=\"HTML mode\"\n      className=\"rsw-btn\"\n      onClick={onClick}\n      data-active={editorState.htmlMode}\n      {...rest}\n    >\n      &lt;/&gt;\n    </button>\n  );\n}\n","import * as React from 'react';\nimport { useEditorState } from '../editor/EditorContext';\n\nexport function Separator() {\n  const editorState = useEditorState();\n\n  if (editorState.htmlMode) {\n    return null;\n  }\n\n  return <div className=\"rsw-separator\" />;\n}\n","import * as React from 'react';\nimport { HTMLAttributes } from 'react';\n\nexport function Toolbar(props: HTMLAttributes<HTMLDivElement>) {\n  return <div {...props} className=\"rsw-toolbar\" />;\n}\n","import * as React from 'react';\nimport { Editor, EditorProps } from './Editor';\nimport { EditorProvider } from './EditorContext';\nimport {\n  BtnBold,\n  BtnBulletList,\n  BtnClearFormatting,\n  BtnItalic,\n  BtnLink,\n  BtnNumberedList,\n  BtnRedo,\n  BtnStyles,\n  BtnUnderline,\n  BtnUndo,\n  HtmlButton,\n  Separator,\n  Toolbar,\n} from '../toolbar';\n\nexport function DefaultEditor(props: EditorProps) {\n  return (\n    <EditorProvider>\n      <Editor {...props}>\n        <Toolbar>\n          <BtnUndo />\n          <BtnRedo />\n          <Separator />\n          <BtnBold />\n          <BtnItalic />\n          <BtnUnderline />\n          <Separator />\n          <BtnNumberedList />\n          <BtnBulletList />\n          <Separator />\n          <BtnLink />\n          <BtnClearFormatting />\n          <HtmlButton />\n          <Separator />\n          <BtnStyles />\n        </Toolbar>\n      </Editor>\n    </EditorProvider>\n  );\n}\n"],"names":["getSelectedNode","document","selection","createRange","parentElement","window","getSelection","rangeCount","getRangeAt","startContainer","parentNode","normalizeHtml","str","replace","ContentEditable","React","memo","forwardRef","_a","ref","className","disabled","tagName","value","rest","__rest","elRef","useRef","htmlRef","restRef","useEffect","current","el","innerHTML","target","createTextNode","appendChild","isTargetFocused","activeElement","nodeValue","sel","range","setStart","length","collapse","removeAllRanges","addRange","HTMLElement","focus","replaceCaret","useMemo","onChange","event","elementHtml","_b","call","__assign","name","createElement","contentEditable","dangerouslySetInnerHTML","__html","onBlur","e","onInput","onKeyDown","onKeyUp","$el","EditorContext","createContext","EditorProvider","children","useState","htmlMode","update","attrs","setState","prevState","date","Date","now","state","Provider","useEditorState","context","useContext","Error","HtmlEditor","Editor","onSelect","editorState","onClickOutside","contains","$selection","addEventListener","removeEventListener","BtnBold","createButton","BtnBulletList","xmlns","width","height","viewBox","style","verticalAlign","fill","d","BtnClearFormatting","BtnItalic","BtnLink","nodeName","execCommand","prompt","BtnNumberedList","BtnRedo","BtnUnderline","textDecoration","BtnUndo","title","content","command","ButtonFactory","displayName","props","active","queryCommandState","type","onMouseDown","preventDefault","BtnStyles","items","DropdownFactory","Dropdown","selected","parseInt","commandArgument","selectedIndex","createDropdown","inputProps","hidden","map","item","index","key","HtmlButton","onClick","Separator","Toolbar"],"mappings":"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"}